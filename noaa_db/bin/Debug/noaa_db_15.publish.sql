/*
Deployment script for noaadb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "noaadb"
:setvar DefaultFilePrefix "noaadb"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
/*
The column [dbo].[airport].[latitude] on table [dbo].[airport] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[airport].[longitude] on table [dbo].[airport] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[airport])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
Table [dbo].[DimStation] is being dropped.  Deployment will halt if the table contains data.
*/

IF EXISTS (select top 1 1 from [dbo].[DimStation])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping [dbo].[station].[IX_geo]...';


GO
DROP INDEX [IX_geo]
    ON [dbo].[station];


GO
PRINT N'Dropping [dbo].[DimStation]...';


GO
DROP TABLE [dbo].[DimStation];


GO
PRINT N'Dropping [dbo].[stationByGeo]...';


GO
DROP FUNCTION [dbo].[stationByGeo];


GO
PRINT N'Creating <unnamed>...';


GO
EXECUTE sp_addrolemember @rolename = N'db_datawriter', @membername = N'usqluser';


GO
PRINT N'Starting rebuilding table [dbo].[airport]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_airport] (
    [iata_code] VARCHAR (3)  NOT NULL,
    [name]      VARCHAR (64) NULL,
    [city]      VARCHAR (64) NULL,
    [latitude]  FLOAT (53)   NOT NULL,
    [longitude] FLOAT (53)   NOT NULL,
    [geo]       AS           ([geography]::Point([latitude], [longitude], (4326))) PERSISTED,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Airport1] PRIMARY KEY CLUSTERED ([iata_code] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[airport])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_airport] ([iata_code], [city])
        SELECT   [iata_code],
                 [city]
        FROM     [dbo].[airport]
        ORDER BY [iata_code] ASC;
    END

DROP TABLE [dbo].[airport];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_airport]', N'airport';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Airport1]', N'PK_Airport', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[airport].[IX_airport_geo]...';


GO
CREATE SPATIAL INDEX [IX_airport_geo]
    ON [dbo].[airport] ([geo])
    USING GEOGRAPHY_GRID
    WITH  (
            GRIDS = (LEVEL_1 = LOW, LEVEL_2 = LOW, LEVEL_3 = LOW, LEVEL_4 = LOW)
          );


GO
PRINT N'Creating [dbo].[station].[IX_geo]...';


GO
CREATE SPATIAL INDEX [IX_geo]
    ON [dbo].[station] ([geo])
    USING GEOGRAPHY_GRID
    WITH  (
            GRIDS = (LEVEL_1 = LOW, LEVEL_2 = LOW, LEVEL_3 = LOW, LEVEL_4 = LOW)
          );


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

---------------------------------------------------------------------------------
-- Pre-load station and airport tables using SSIS
-- Then, run (or re-run) this init script.
---------------------------------------------------------------------------------


begin tran;

	truncate table dbo.calendar;

	with cte ([date])
	as (
		select DATEFROMPARTS(2010,1,1)
		union all
		select dateadd(day,1,[date])
		from cte
		where [date] < DATEFROMPARTS(2018,1,1)
	)

	insert dbo.calendar (
		 [datekey]
		,[date]
		,[year]
		,[month]
		,[day]
		,[day_of_year]
		,[day_of_week]
		,[quarter]
		,[week]
		,[month_name]
		,[weekday]
	)
	select 
		 convert(int, convert(varchar(8), [date], 112)) as [datekey]
		,[date]
		,datepart(year, [date]) as [year]
		,datepart(month, [date]) as [month]
		,datepart(day, [date]) as [day]
		,dateparT(dayofyear, [date]) as [day_of_year]
		,datepart(weekday, [date]) as [day_of_week]
		,datepart(quarter, [date]) as [quarter]
		,datepart(week, [date]) as [week]
		,datename(month, [date]) as [month_name]
		,datename(weekday, [date]) as [weekday]
	from cte
	option (maxrecursion 32767)

commit tran;

begin tran;

	truncate table dbo.station_iata;

	with cte
	as (
		select s.id
			,s.latitude
			,s.longitude
			,s.elevation
			,s.state
			,s.name
			,s.gsn_flag
			,s.hcn_crn_flag
			,s.wmo_id
			,a.iata_code
			,a.city
			,row_number() over (partition by s.id order by s.geo.STDistance(a.geo)) as nearest_iata_rank
		from dbo.station s
		left join dbo.airport a ON s.geo.STDistance(a.geo) < 1609 * 25
	)

	insert dbo.station_iata (
		 id
		,latitude
		,longitude
		,elevation
		,state
		,name
		,gsn_flag
		,hcn_crn_flag
		,wmo_id
		,iata_code
		,iata_city
	)

	select id
		,latitude
		,longitude
		,elevation
		,state
		,name
		,gsn_flag
		,hcn_crn_flag
		,wmo_id
		,iata_code
		,city
	from cte
	where nearest_iata_rank = 1

commit tran;
GO

GO
PRINT N'Update complete.';


GO
