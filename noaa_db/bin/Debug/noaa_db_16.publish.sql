/*
Deployment script for noaadb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "noaadb"
:setvar DefaultFilePrefix "noaadb"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
PRINT N'Creating [dbo].[sp_init_station_iata]...';


GO
CREATE PROCEDURE [dbo].[sp_init_station_iata]
AS
BEGIN

	BEGIN TRAN;

		TRUNCATE TABLE dbo.station_iata;

		WITH cte
		AS (
			SELECT s.id
				,s.latitude
				,s.longitude
				,s.elevation
				,s.state
				,s.name
				,s.gsn_flag
				,s.hcn_crn_flag
				,s.wmo_id
				,a.iata_code
				,a.city
				,ROW_NUMBER() OVER (PARTITION BY s.id ORDER BY s.geo.STDistance(a.geo)) AS nearest_iata_rank
			FROM dbo.station s
			LEFT JOIN dbo.airport a ON s.geo.STDistance(a.geo) < 1609 * 25
		)

		INSERT dbo.station_iata (
			 id
			,latitude
			,longitude
			,elevation
			,state
			,name
			,gsn_flag
			,hcn_crn_flag
			,wmo_id
			,iata_code
			,iata_city
		)

		SELECT id
			,latitude
			,longitude
			,elevation
			,state
			,name
			,gsn_flag
			,hcn_crn_flag
			,wmo_id
			,iata_code
			,city
		FROM cte
		WHERE nearest_iata_rank = 1

	COMMIT TRAN;
END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

---------------------------------------------------------------------------------
-- Pre-load station and airport tables using SSIS
-- Then, run (or re-run) this init script.
---------------------------------------------------------------------------------


begin tran;

	truncate table dbo.calendar;

	with cte ([date])
	as (
		select DATEFROMPARTS(2010,1,1)
		union all
		select dateadd(day,1,[date])
		from cte
		where [date] < DATEFROMPARTS(2018,1,1)
	)

	insert dbo.calendar (
		 [datekey]
		,[date]
		,[year]
		,[month]
		,[day]
		,[day_of_year]
		,[day_of_week]
		,[quarter]
		,[week]
		,[month_name]
		,[weekday]
	)
	select 
		 convert(int, convert(varchar(8), [date], 112)) as [datekey]
		,[date]
		,datepart(year, [date]) as [year]
		,datepart(month, [date]) as [month]
		,datepart(day, [date]) as [day]
		,dateparT(dayofyear, [date]) as [day_of_year]
		,datepart(weekday, [date]) as [day_of_week]
		,datepart(quarter, [date]) as [quarter]
		,datepart(week, [date]) as [week]
		,datename(month, [date]) as [month_name]
		,datename(weekday, [date]) as [weekday]
	from cte
	option (maxrecursion 32767)

commit tran;
GO

GO
PRINT N'Update complete.';


GO
